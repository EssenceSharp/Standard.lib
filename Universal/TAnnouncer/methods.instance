	"Instance methods for TAnnouncer"	protocol: #announcing method:	[## announce: anAnnouncement				| announcement subscriptions |		announcement := anAnnouncement asAnnouncement.			subscriptions := self subscriptions.		subscriptions ifNotNil: [subscriptions deliver: announcement].		^announcement	];	protocol: #initialization method:	[## initialize			self subscriptions: AnnouncementSubscriptionRegistry new.	];	protocol: #private method:	[## basicSubscribe: subscription			^self subscriptions add: subscription	];	protocol: #private method:	[## replace: subscription with: replacement			^self subscriptions replace: subscription with: replacement	];	protocol: #queries method:	[## hasSubscriber: anObject				self subscriptions subscriptionsOf: anObject do: [:each | ^true].		^false	];	protocol: #queries method:	[## numberOfSubscriptions			^self subscriptions numberOfSubscriptions	];	protocol: #'subscribing-private' method:	[## removeSubscription: subscription					^self subscriptions remove: subscription	];	protocol: #'subscribing-private' method:	[## subscribe: anAnnouncementClass do: action for: subscriber		^self subscriptions 			add: (BlockAnnouncementSubscription new 				announcer: self;				announcementClass: anAnnouncementClass;				subscriber: subscriber;				action: action)	];	protocol: #'subscribing-private' method:	[## subscribe: anAnnouncementClass send: aSelector to: anObject					^self subscriptions 			add: (MessageSendAnnouncementSubscription new 				announcer: self;				announcementClass: anAnnouncementClass;				subscriber: anObject;				action: (MessageSend receiver: anObject selector: aSelector))	];	protocol: #subscribing method:	[## when: anAnnouncementClass do: action			^self 			subscribe: anAnnouncementClass 			do: action	];	protocol: #subscribing method:	[## when: anAnnouncementClass do: action for: aSubscriber			^self 			subscribe: anAnnouncementClass 			do: action 			for: aSubscriber	];	protocol: #subscribing method:	[## when: anAnnouncementClass send: aSelector to: anObject					^self 			subscribe: anAnnouncementClass 			send: aSelector 			to: anObject	];	protocol: #subscribing method:	[## unsubscribe: anObject					self subscriptions removeSubscriber: anObject	]