	"Published system primitives for Float"
	"**** Code generated in order to document built-in system primitives (which may or may not be used by any classes.) So, although the library loader ignores this file, DO NOT MODIFY IT! ****"

	protocol: #'system primitives' method:
	[## class

		<primitive: class domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## isMemberOf: aBehavior 

		<primitive: #isMemberOf: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## isKindOf: aBehavior 

		<primitive: #isKindOf: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## = comparand

		<primitive: #= domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## hash

		<primitive: hash domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## compareTo: comparand 

		<primitive: #compareTo: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## < comparand

		<primitive: #< domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## asCharacter

		<primitive: asCharacter domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## asInteger

		<primitive: asInteger domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## asDouble

		<primitive: asDouble domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## asQuad

		<primitive: asQuad domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## sign

		<primitive: sign domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## isZero

		<primitive: isZero domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## positive

		<primitive: positive domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## negative

		<primitive: negative domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## abs

		<primitive: abs domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## negated

		<primitive: negated domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## + operand

		<primitive: #+ domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## - operand

		<primitive: #- domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## * operand

		<primitive: #* domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## / operand

		<primitive: #/ domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## reciprocal

		<primitive: reciprocal domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## roundTo: operand 

		<primitive: #roundTo: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## truncateTo: modulus 

		<primitive: #truncateTo: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## quo: operand 

		<primitive: #quo: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## // operand

		<primitive: #// domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## rem: operand 

		<primitive: #rem: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## \\ operand

		<primitive: #\\ domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## ** operand

		<primitive: #** domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## log: operand 

		<primitive: #log: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## ln

		<primitive: ln domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## to: end do: enumerator 

		<primitive: #to:do: domain: SinglePrecision>
	];

	protocol: #'system primitives' method:
	[## to: end by: step do: enumerator 

		<primitive: #to:by:do: domain: SinglePrecision>
	];
